namespace :yasslab do
  task :test do
    Dir.glob('./yasslab/test/**/*_test.rb') do |file|
      system("ruby #{file}")
    end
  end
end

namespace :assets do
  desc "Make ready for deploying to Heroku from GTT"
  task precompile: [:clean] do
    Dir.chdir('./guides') do
      if ENV['GENERATE_VIA_GTT'] == '1'
        Rake::Task['gtt:allocate'].invoke
        Rake::Task['gtt:replacer'].invoke
      end

      Rake::Task['guides:clean'].invoke
      ENV['GUIDES_LANGUAGE'] = 'ja'
      Rake::Task['guides:generate:html'].invoke('--trace')
      Rake::Task['guides:tanpopo'].invoke
    end

    sh 'JEKYLL_ENV=production bundle exec jekyll build'
  end
end

# Test if HTML files lack of tags, attributes, etc.
# cf. https://github.com/gjtorikian/html-proofer
require 'html-proofer'
task test: [:build] do
  sh "bundle exec rake assets:precompile" unless ENV['SKIP_BUILD'] == '1'
  options = {
    alt_ignore: [/.*\.(png|gif)/],  # TODO: Set empty, run tests, and fix errors
    allow_hash_href:  true,
    checks: ['Links', 'Images', 'Scripts', 'OpenGraph', 'Favicon'],
    disable_external: true,
    ignore_files: [
      /.*\.xml/,
      /.*\.json/,
      "_site/humanx.txt"
    ],
    ignore_status_codes: [0, 500, 999],
    ignore_urls: [
      %r{^http://localhost:3000},
      %r{^//cdn.carbonads.com},

      # TODO: Fix these URLs later
      %r{^http://docs.ruby-lang.org},
      %r{^http://api.rubyonrails.org},
      %r{^http://guides.rubygems.org},
      %r{^http://guides.rubyonrails.org},
      %r{^http://edgeapi.rubyonrails.org},
      %r{^http://netwiki.rubyonrails.org},
      %r{^http://contributors.rubyonrails.org},

      # TODO: Check if these URLs can use HTTPS
      %r{^http://lindsaar.net},
      %r{^http://railscasts.com},
      %r{^http://rdoc.info},
      %r{^http://semver.org},
      %r{^http://yehudakatz.com},
      %r{^http://yugui.jp},
      %r{^http://www.rdoc.info},
      %r{^http://www.unicode.org},
      %r{^http://}, # This ignores all URLs that start with 'http://*'.
    ],
  }
  HTMLProofer.check_directory('_site/', options).run
end

task build: [:clean] do
  system 'bundle exec jekyll build'
end

task :clean do
  system 'bundle exec jekyll clean'
end


namespace :gtt do
  desc 'Unzip archive.zip downloaded from GTT and fix GTT-specific issues'
  task :allocate do
    ruby "allocate.rb"
  end

  desc 'Globally replace with regexes for all guides instead of GTT'
  task :replacer do
    ruby "replacer.rb"
  end
end

namespace :guides do
  desc 'Generate guides (for authors), use ONLY=foo to process just "foo.md"'
  task generate: "generate:html"

  # Guides are written in UTF-8, but the environment may be configured for some
  # other locale, these tasks are responsible for ensuring the default external
  # encoding is UTF-8.
  #
  # Real use cases: Generation was reported to fail on a machine configured with
  # GBK (Chinese). The docs server once got misconfigured somehow and had "C",
  # which broke generation too.
  task :encoding do
    %w(LANG LANGUAGE LC_ALL).each do |env_var|
      ENV[env_var] = "en_US.UTF-8"
    end
  end

  namespace :generate do
    desc "Generate HTML guides"
    task html: :encoding do
      ENV["WARNINGS"] = "1" # authors can't disable this
      ruby "-Eutf-8:utf-8", "rails_guides.rb"
    end

    desc "Generate .mobi file. The kindlegen executable must be in your PATH. You can get it for free from http://www.amazon.com/gp/feature.html?docId=1000765211"
    task kindle: :encoding do
      require "kindlerb"
      unless Kindlerb.kindlegen_available?
        abort "Please run `setupkindlerb` to install kindlegen"
      end
      unless `convert` =~ /convert/
        abort "Please install ImageMagick"
      end
      ENV["KINDLE"] = "1"
      Rake::Task["guides:generate:html"].invoke
    end

    desc "Generate .docset File for Dash. https://kapeli.com"
    task :dash do
      ENV['DASH'] = '1'
      Rake::Task['guides:generate:html'].invoke
    end
  end

  # Validate guides -------------------------------------------------------------------------
  desc 'Validate guides, use ONLY=foo to process just "foo.html"'
  task validate: :encoding do
    ruby "w3c_validator.rb"
  end

  desc "Show help"
  task :help do
    puts <<HELP

Guides are taken from the source directory, and the result goes into the
output directory. Assets are stored under files, and copied to output/files as
part of the generation process.

You can generate HTML, Kindle or both formats using the `guides:generate` task.

All of these processes are handled via rake tasks, here's a full list of them:

#{%x[rake -T]}
Some arguments may be passed via environment variables:

  RAILS_VERSION=tag
    If guides are being generated for a specific Rails version set the Git tag
    here, otherwise the current SHA1 is going to be used to generate edge guides.

  ALL=1
    Force generation of all guides.

  ONLY=name
    Useful if you want to generate only one or a set of guides.

    Generate only association_basics.html:
      ONLY=assoc

    Separate many using commas:
      ONLY=assoc,migrations

  GUIDES_LANGUAGE
    Use it when you want to generate translated guides in
    source/<GUIDES_LANGUAGE> folder (such as source/es)

Examples:
  $ rake guides:generate ALL=1 RAILS_VERSION=v5.1.0
  $ rake guides:generate ONLY=migrations
  $ rake guides:generate:kindle
  $ rake guides:generate GUIDES_LANGUAGE=es
HELP
  end

  desc "Clean up generated files"
  task :clean do
    system 'rm -rf output/ja'
  end

  desc "Tweak files for deploying to Heroku"
  task :tanpopo do
    system 'echo "Tanpopo: Tweaking files for deploying to Heroku ..."'
    system 'cp ./source/ja/favicon.ico ./output/ja'
    system 'cp ./source/ja/humans.txt  ./output/ja'
    system 'rm ./output/ja/layout.html'
    system 'echo "Tanpopo: Done."'
  end
end

task default: "guides:help"
